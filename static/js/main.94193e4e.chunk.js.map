{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","indbId","handleChange","event","target","name","value","setState","onSubmit","preventDefault","props","addMovie","this","type","placeholder","onChange","Component","App","moviesFromServer","newMovie","ReactDOM","render","document","getElementById"],"mappings":"2wEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCvBGK,EAAb,4MAKEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTc,OAAQ,IAVZ,EAaEC,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,EAAKC,SAAL,eAAiBF,EAAOC,KAhB5B,EAmBEE,SAAW,SAACL,GACVA,EAAMM,iBACN,MAAwD,EAAKT,MAArDhB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,OAAQC,EAApC,EAAoCA,QAASc,EAA7C,EAA6CA,OAE7C,EAAKS,MAAMC,SAAS3B,EAAOC,EAAaC,EAAQC,EAASc,GACzD,EAAKM,SAAS,CACZvB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTc,OAAQ,MA7Bd,4CAiCE,WACE,OACE,0BAAMO,SAAUI,KAAKJ,UACnB,2BACEK,KAAK,OACLR,KAAK,QACLS,YAAY,QACZR,MAAOM,KAAKZ,MAAMhB,MAClB+B,SAAUH,KAAKV,eAEjB,2BACEW,KAAK,OACLR,KAAK,cACLS,YAAY,cACZR,MAAOM,KAAKZ,MAAMf,YAClB8B,SAAUH,KAAKV,eAEjB,2BACEW,KAAK,OACLR,KAAK,SACLS,YAAY,SACZR,MAAOM,KAAKZ,MAAMd,OAClB6B,SAAUH,KAAKV,eAEjB,2BACEW,KAAK,OACLR,KAAK,UACLS,YAAY,UACZR,MAAOM,KAAKZ,MAAMb,QAClB4B,SAAUH,KAAKV,eAEjB,2BACEW,KAAK,OACLR,KAAK,SACLS,YAAY,SACZR,MAAOM,KAAKZ,MAAMC,OAClBc,SAAUH,KAAKV,eAEjB,4BACEW,KAAK,UADP,YAvER,GAA8BG,a,OCGjBC,EAAb,4MACEjB,MAAQ,CACNN,OAAQwB,GAFZ,EAKEP,SAAW,SAAC3B,EAAOC,EAAaC,EAAQC,EAASW,GAC/C,EAAKS,UAAS,SAACP,GACb,IAAMmB,EAAW,CACfnC,QACAC,cACAC,SACAC,UACAW,UAGF,MAAQ,CACNJ,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoByB,SAhBlC,4CAqBE,WACE,IAAQzB,EAAWkB,KAAKZ,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUuB,SAAUC,KAAKD,iBA9BnC,GAAyBK,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.94193e4e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  static propTypes = {\n    addMovie: PropTypes.func.isRequired,\n  };\n\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    indbId: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const { title, description, imgUrl, imdbUrl, indbId } = this.state;\n\n    this.props.addMovie(title, description, imgUrl, imdbUrl, indbId);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      indbId: '',\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={this.state.title}\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={this.state.description}\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"ImgUrl\"\n          value={this.state.imgUrl}\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"ImdbUrl\"\n          value={this.state.imdbUrl}\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"text\"\n          name=\"indbId\"\n          placeholder=\"IndbId\"\n          value={this.state.indbId}\n          onChange={this.handleChange}\n        />\n        <button\n          type=\"submit\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title, description, imgUrl, imdbUrl, imdbId) => {\n    this.setState((state) => {\n      const newMovie = {\n        title,\n        description,\n        imgUrl,\n        imdbUrl,\n        imdbId,\n      };\n\n      return ({\n        movies: [...state.movies, newMovie],\n      });\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}